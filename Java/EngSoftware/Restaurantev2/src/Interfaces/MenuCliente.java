/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Giovanni
 */
public class MenuCliente extends javax.swing.JFrame {

    /**
     * Creates new form MenuCliente
     */
    public MenuCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Clientes = new javax.swing.ButtonGroup();
        pnMenuCliente = new javax.swing.JPanel();
        btCardapio = new javax.swing.JButton();
        btCliente = new javax.swing.JRadioButton();
        btClienteDeliv = new javax.swing.JRadioButton();
        pnCliente = new javax.swing.JPanel();
        cxPratosCliente = new javax.swing.JTextField();
        rtPratosCliente = new javax.swing.JLabel();
        rtBebidasCliente = new javax.swing.JLabel();
        cxNumMesa = new javax.swing.JTextField();
        rtNumMesa = new javax.swing.JLabel();
        cxBebidasCliente = new javax.swing.JTextField();
        btVerifPedidoCliente = new javax.swing.JButton();
        btConfirmPedidoCliente = new javax.swing.JButton();
        cxCodPedidoCliente = new javax.swing.JTextField();
        rtCodPedidoCliente = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        btAlterarPedidoCliente = new javax.swing.JButton();
        btCancelarPedido = new javax.swing.JButton();
        pnClienteDeliv = new javax.swing.JPanel();
        cxPratosClienteDeliv = new javax.swing.JTextField();
        rtPratosClienteDeliv = new javax.swing.JLabel();
        rtBebidasClienteDeliv = new javax.swing.JLabel();
        cxEndereco = new javax.swing.JTextField();
        rtEndereco = new javax.swing.JLabel();
        cxBebidasClienteDeliv = new javax.swing.JTextField();
        btCancelarEntrega = new javax.swing.JButton();
        btConfirmPedidoClienteDeliv = new javax.swing.JButton();
        btAlterarPedido = new javax.swing.JButton();
        rtCodPedidoDeliv = new javax.swing.JLabel();
        cxCodPedidoDeliv = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btVerifPedidoClienteDeliv2 = new javax.swing.JButton();
        ImgMenuCliente = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        pnMenuCliente.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btCardapio.setFont(new java.awt.Font("Monotype Corsiva", 1, 26)); // NOI18N
        btCardapio.setText("Cardápio");
        btCardapio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCardapioActionPerformed(evt);
            }
        });
        pnMenuCliente.add(btCardapio, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, 130, 40));

        btCliente.setBackground(new java.awt.Color(255, 255, 255));
        Clientes.add(btCliente);
        btCliente.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        btCliente.setText("Cliente");
        btCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btClienteMouseClicked(evt);
            }
        });
        pnMenuCliente.add(btCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 113, 130, 30));

        btClienteDeliv.setBackground(new java.awt.Color(255, 255, 255));
        Clientes.add(btClienteDeliv);
        btClienteDeliv.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        btClienteDeliv.setText("Cliente Delivery");
        btClienteDeliv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btClienteDelivMouseClicked(evt);
            }
        });
        pnMenuCliente.add(btClienteDeliv, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 120, 180, 30));

        pnCliente.setBackground(new java.awt.Color(255, 255, 255));
        pnCliente.setLayout(null);

        cxPratosCliente.setFont(new java.awt.Font("Fira Code", 1, 24)); // NOI18N
        pnCliente.add(cxPratosCliente);
        cxPratosCliente.setBounds(20, 40, 370, 80);

        rtPratosCliente.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        rtPratosCliente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        rtPratosCliente.setText("Pratos");
        rtPratosCliente.setToolTipText("");
        rtPratosCliente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnCliente.add(rtPratosCliente);
        rtPratosCliente.setBounds(20, 10, 100, 30);

        rtBebidasCliente.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        rtBebidasCliente.setText("Bebidas");
        pnCliente.add(rtBebidasCliente);
        rtBebidasCliente.setBounds(20, 140, 90, 30);

        cxNumMesa.setFont(new java.awt.Font("Fira Code", 1, 18)); // NOI18N
        pnCliente.add(cxNumMesa);
        cxNumMesa.setBounds(20, 330, 370, 60);

        rtNumMesa.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        rtNumMesa.setText("Número da Mesa");
        pnCliente.add(rtNumMesa);
        rtNumMesa.setBounds(30, 300, 170, 20);

        cxBebidasCliente.setFont(new java.awt.Font("Fira Code", 1, 24)); // NOI18N
        pnCliente.add(cxBebidasCliente);
        cxBebidasCliente.setBounds(20, 180, 370, 90);

        btVerifPedidoCliente.setBackground(new java.awt.Color(0, 0, 0));
        btVerifPedidoCliente.setFont(new java.awt.Font("Fira Code", 1, 18)); // NOI18N
        btVerifPedidoCliente.setForeground(new java.awt.Color(255, 255, 255));
        btVerifPedidoCliente.setText("Verificar Pedido");
        btVerifPedidoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerifPedidoClienteActionPerformed(evt);
            }
        });
        pnCliente.add(btVerifPedidoCliente);
        btVerifPedidoCliente.setBounds(470, 200, 240, 40);

        btConfirmPedidoCliente.setBackground(new java.awt.Color(0, 0, 0));
        btConfirmPedidoCliente.setFont(new java.awt.Font("Fira Code", 1, 18)); // NOI18N
        btConfirmPedidoCliente.setForeground(new java.awt.Color(255, 255, 255));
        btConfirmPedidoCliente.setText("Fazer Pedido");
        btConfirmPedidoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfirmPedidoClienteActionPerformed(evt);
            }
        });
        pnCliente.add(btConfirmPedidoCliente);
        btConfirmPedidoCliente.setBounds(470, 140, 240, 40);

        cxCodPedidoCliente.setFont(new java.awt.Font("Fira Code", 1, 24)); // NOI18N
        pnCliente.add(cxCodPedidoCliente);
        cxCodPedidoCliente.setBounds(470, 70, 250, 50);

        rtCodPedidoCliente.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        rtCodPedidoCliente.setText("Código do Pedido:");
        pnCliente.add(rtCodPedidoCliente);
        rtCodPedidoCliente.setBounds(470, 34, 180, 30);

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("LIMPAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        pnCliente.add(jButton2);
        jButton2.setBounds(663, 391, 90, 22);

        btAlterarPedidoCliente.setBackground(new java.awt.Color(0, 0, 0));
        btAlterarPedidoCliente.setFont(new java.awt.Font("Fira Code", 1, 18)); // NOI18N
        btAlterarPedidoCliente.setForeground(new java.awt.Color(255, 255, 255));
        btAlterarPedidoCliente.setText("Alterar Pedido");
        btAlterarPedidoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarPedidoClienteActionPerformed(evt);
            }
        });
        pnCliente.add(btAlterarPedidoCliente);
        btAlterarPedidoCliente.setBounds(470, 260, 240, 40);

        btCancelarPedido.setBackground(new java.awt.Color(0, 0, 0));
        btCancelarPedido.setFont(new java.awt.Font("Fira Code", 1, 18)); // NOI18N
        btCancelarPedido.setForeground(new java.awt.Color(255, 255, 255));
        btCancelarPedido.setText("Cancelar Entrega");
        btCancelarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarPedidoActionPerformed(evt);
            }
        });
        pnCliente.add(btCancelarPedido);
        btCancelarPedido.setBounds(470, 320, 240, 40);

        pnMenuCliente.add(pnCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 160, 0, 420));

        pnClienteDeliv.setBackground(new java.awt.Color(255, 255, 255));
        pnClienteDeliv.setLayout(null);

        cxPratosClienteDeliv.setFont(new java.awt.Font("Fira Code", 1, 24)); // NOI18N
        pnClienteDeliv.add(cxPratosClienteDeliv);
        cxPratosClienteDeliv.setBounds(20, 40, 370, 80);

        rtPratosClienteDeliv.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        rtPratosClienteDeliv.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        rtPratosClienteDeliv.setText("Pratos");
        rtPratosClienteDeliv.setToolTipText("");
        rtPratosClienteDeliv.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnClienteDeliv.add(rtPratosClienteDeliv);
        rtPratosClienteDeliv.setBounds(20, 10, 100, 30);

        rtBebidasClienteDeliv.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        rtBebidasClienteDeliv.setText("Bebidas");
        pnClienteDeliv.add(rtBebidasClienteDeliv);
        rtBebidasClienteDeliv.setBounds(20, 140, 90, 30);

        cxEndereco.setFont(new java.awt.Font("Fira Code", 1, 18)); // NOI18N
        pnClienteDeliv.add(cxEndereco);
        cxEndereco.setBounds(20, 330, 370, 60);

        rtEndereco.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        rtEndereco.setText("Endereço");
        pnClienteDeliv.add(rtEndereco);
        rtEndereco.setBounds(30, 300, 170, 20);

        cxBebidasClienteDeliv.setFont(new java.awt.Font("Fira Code", 1, 24)); // NOI18N
        pnClienteDeliv.add(cxBebidasClienteDeliv);
        cxBebidasClienteDeliv.setBounds(20, 180, 370, 90);

        btCancelarEntrega.setBackground(new java.awt.Color(0, 0, 0));
        btCancelarEntrega.setFont(new java.awt.Font("Fira Code", 1, 18)); // NOI18N
        btCancelarEntrega.setForeground(new java.awt.Color(255, 255, 255));
        btCancelarEntrega.setText("Cancelar Entrega");
        btCancelarEntrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarEntregaActionPerformed(evt);
            }
        });
        pnClienteDeliv.add(btCancelarEntrega);
        btCancelarEntrega.setBounds(470, 330, 260, 50);

        btConfirmPedidoClienteDeliv.setBackground(new java.awt.Color(0, 0, 0));
        btConfirmPedidoClienteDeliv.setFont(new java.awt.Font("Fira Code", 1, 18)); // NOI18N
        btConfirmPedidoClienteDeliv.setForeground(new java.awt.Color(255, 255, 255));
        btConfirmPedidoClienteDeliv.setText("Fazer Pedido");
        btConfirmPedidoClienteDeliv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfirmPedidoClienteDelivActionPerformed(evt);
            }
        });
        pnClienteDeliv.add(btConfirmPedidoClienteDeliv);
        btConfirmPedidoClienteDeliv.setBounds(470, 140, 260, 50);

        btAlterarPedido.setBackground(new java.awt.Color(0, 0, 0));
        btAlterarPedido.setFont(new java.awt.Font("Fira Code", 1, 18)); // NOI18N
        btAlterarPedido.setForeground(new java.awt.Color(255, 255, 255));
        btAlterarPedido.setText("Alterar Pedido");
        btAlterarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarPedidoActionPerformed(evt);
            }
        });
        pnClienteDeliv.add(btAlterarPedido);
        btAlterarPedido.setBounds(470, 270, 260, 50);

        rtCodPedidoDeliv.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        rtCodPedidoDeliv.setText("Código do Pedido");
        pnClienteDeliv.add(rtCodPedidoDeliv);
        rtCodPedidoDeliv.setBounds(470, 10, 180, 40);

        cxCodPedidoDeliv.setFont(new java.awt.Font("Fira Code", 1, 24)); // NOI18N
        pnClienteDeliv.add(cxCodPedidoDeliv);
        cxCodPedidoDeliv.setBounds(470, 50, 260, 70);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("LIMPAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        pnClienteDeliv.add(jButton1);
        jButton1.setBounds(653, 390, 100, 22);

        btVerifPedidoClienteDeliv2.setBackground(new java.awt.Color(0, 0, 0));
        btVerifPedidoClienteDeliv2.setFont(new java.awt.Font("Fira Code", 1, 18)); // NOI18N
        btVerifPedidoClienteDeliv2.setForeground(new java.awt.Color(255, 255, 255));
        btVerifPedidoClienteDeliv2.setText("Verificar Pedido");
        btVerifPedidoClienteDeliv2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerifPedidoClienteDeliv2ActionPerformed(evt);
            }
        });
        pnClienteDeliv.add(btVerifPedidoClienteDeliv2);
        btVerifPedidoClienteDeliv2.setBounds(470, 210, 260, 50);

        pnMenuCliente.add(pnClienteDeliv, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 160, 0, 420));

        ImgMenuCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/MenuCliente.jpg"))); // NOI18N
        pnMenuCliente.add(ImgMenuCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMenuCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMenuCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btClienteMouseClicked
        pnClienteDeliv.setSize(0,420);
        pnCliente.setSize(760,420);
    }//GEN-LAST:event_btClienteMouseClicked

    private void btClienteDelivMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btClienteDelivMouseClicked
        pnCliente.setSize(0,420);
        pnClienteDeliv.setSize(760,420);
    }//GEN-LAST:event_btClienteDelivMouseClicked

    private void btConfirmPedidoClienteDelivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfirmPedidoClienteDelivActionPerformed
        try {
            FazerPedidoDeliv();
        } catch (SQLException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
       limpeza();
    }//GEN-LAST:event_btConfirmPedidoClienteDelivActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limpeza();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btAlterarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarPedidoActionPerformed
        try {
            alteraPedidoDeliv();
        } catch (SQLException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btAlterarPedidoActionPerformed

    private void btCancelarEntregaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarEntregaActionPerformed
        try {
            cancelarEntrega();
        } catch (SQLException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btCancelarEntregaActionPerformed

    private void btConfirmPedidoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfirmPedidoClienteActionPerformed
        try {
            FazerPedido();
        } catch (SQLException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
        limpezaFisico();
    }//GEN-LAST:event_btConfirmPedidoClienteActionPerformed

    private void btVerifPedidoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerifPedidoClienteActionPerformed
        try {
            consPedidoFis();
        } catch (SQLException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btVerifPedidoClienteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        limpezaFisico();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btCardapioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCardapioActionPerformed
        Cardapio cardapio = new Cardapio();
        
        cardapio.setVisible(true);
        try {
            cardapio.refresh(cardapio);
        } catch (SQLException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btCardapioActionPerformed

    private void btCancelPedidoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelPedidoClienteActionPerformed
        try {
            cancelaPedidoFis();
        } catch (SQLException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btCancelPedidoClienteActionPerformed

    private void btAlteraPedidoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlteraPedidoClienteActionPerformed
        try {
            alteraPedidoFis();
        } catch (SQLException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btAlteraPedidoClienteActionPerformed

    private void btAlteraPedidoClienteDelivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlteraPedidoClienteDelivActionPerformed
        try {
            alteraPedidoDeliv();
        } catch (SQLException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btAlteraPedidoClienteDelivActionPerformed

    private void btVerifPedidoClienteDeliv2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerifPedidoClienteDeliv2ActionPerformed
       try {
            consPedidoDeliv();
        } catch (SQLException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btVerifPedidoClienteDeliv2ActionPerformed

    private void btAlterarPedidoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarPedidoClienteActionPerformed
        try {
            alteraPedidoFis();
        } catch (SQLException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btAlterarPedidoClienteActionPerformed

    private void btCancelarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarPedidoActionPerformed
        try {
            cancelaPedidoFis();
        } catch (SQLException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btCancelarPedidoActionPerformed

    private Delivery deli = new Delivery();
    private ConBD c = new ConBD();
    private ResultSet rst  = null;
    private ResultSet rstAux  = null;
    
    public void FazerPedidoDeliv() throws SQLException{
      deli = new Delivery();

      try{
        deli.setPrato(Integer.parseInt(cxPratosClienteDeliv.getText()));
        deli.setBebida(Float.parseFloat(cxBebidasClienteDeliv.getText()));
        deli.setCodigo(Integer.parseInt(cxCodPedidoDeliv.getText()));
        deli.setEndereco(cxEndereco.getText());
        if(deli.getCodigo() != 0){
          if(c.TstBD("select coalesce((select cod from PedidoDelivery where cod = " +deli.getCodigo()+ "),0)") == false){
            int respDeliv = JOptionPane.showConfirmDialog(null, "Confirma Pedido?","Confirmação de Pedido",JOptionPane.YES_NO_CANCEL_OPTION);
                  if (respDeliv == 0){
                     c.EntBD("insert into PedidoDelivery values ("+ deli.getCodigo()+",'" +deli.getEndereco()+ "'," +  deli.getBebida() + "," + deli.getPrato() + ",false);");
                     JOptionPane.showMessageDialog(null,"Pedido feito com sucesso!","Cadastro realizado",1);
                  }else{
                      limpeza();
                  }  
          }else{
            JOptionPane.showMessageDialog(null, "Já existe um Pedido com este código!","ERRO Cadastro", 2);
            cxCodPedidoDeliv.setText("");
            cxCodPedidoDeliv.requestFocus();
          }
        }else{
          JOptionPane.showMessageDialog(null, "O valor do código não pode ser 0!","ERRO Cadastro", 2);
          cxCodPedidoDeliv.setText("");
          cxCodPedidoDeliv.requestFocus();
        }
      }
      catch(NumberFormatException nfe){
        JOptionPane.showMessageDialog(null, "O valor deve ser um número!","Erro", JOptionPane.ERROR_MESSAGE);
        cxCodPedidoDeliv.setText("");
      }
    }

    public void consPedidoDeliv() throws SQLException{
      deli = new Delivery();
      
      try{
        deli.setCodigo(Integer.parseInt(cxCodPedidoDeliv.getText()));
        
        //deli = fpd.consDelivCod(deli);
        if(c.TstBD("select coalesce((select cod from PedidoDelivery where cod = " +deli.getCodigo()+ "),0)") == true){
          rst = null;
          rst = c.OutBD("select * from PedidoDelivery where cod = "+ deli.getCodigo() +";");
          rst.next();
          deli.setPrato(rst.getInt("prato"));
          deli.setBebida(rst.getFloat("bebida"));
          deli.setEndereco(rst.getString("endereco"));
          cxPratosClienteDeliv.setText(Integer.toString(deli.getPrato()));
          cxBebidasClienteDeliv.setText(Float.toString(deli.getBebida()));
          cxCodPedidoDeliv.setText(Integer.toString(deli.getCodigo()));
          cxEndereco.setText(deli.getEndereco());
        }else{
          JOptionPane.showMessageDialog(null, " Não existe um pedido com esse código!","ERRO Consulta", 0);
          cxCodPedidoDeliv.setText("");
        }
      }
      catch(NumberFormatException nfe){
        JOptionPane.showMessageDialog(null, "O Código deve ser um inteiro!","Erro de Código", JOptionPane.ERROR_MESSAGE);
        cxCodPedidoDeliv.setText("");
        cxCodPedidoDeliv.requestFocus();
      }
    }

    public void cancelarEntrega() throws SQLException{
      deli = new Delivery();

      try{
        deli.setCodigo(Integer.parseInt(cxCodPedidoDeliv.getText()));
        //deli = fpd.consDelivCod(deli);

        if(c.TstBD("select coalesce((select cod from PedidoDelivery where cod = " +deli.getCodigo()+ "),0)") == true){
          rst = null;
          rst = c.OutBD("select * from PedidoDelivery where cod = "+ deli.getCodigo() +";");
          rst.next();
          deli.setPrato(rst.getInt("prato"));
          deli.setBebida(rst.getFloat("bebida"));
          deli.setEndereco(rst.getString("endereco"));
          
          cxPratosClienteDeliv.setText(Integer.toString(deli.getPrato()));
          cxBebidasClienteDeliv.setText(Float.toString(deli.getBebida()));
          cxCodPedidoDeliv.setText(Integer.toString(deli.getCodigo()));
          cxEndereco.setText(deli.getEndereco());

          int resp = JOptionPane.showConfirmDialog(null, "Confirma cancelamento?","Cancelamento de pedido",JOptionPane.YES_NO_CANCEL_OPTION);

          if(resp==0){
            c.EntBD("delete from PedidoDelivery where cod = "+deli.getCodigo());
            //fpd.cancelarEntrega(deli);
            limpeza();
            JOptionPane.showMessageDialog(null, "Pedido cancelado com sucesso!","Cancelamento Ok", 1);
          }else{
            limpeza();
          }
        }else{
          JOptionPane.showMessageDialog(null, " Não existe um pedido delivery com esse código!","ERRO Consulta", 0);
          cxCodPedidoDeliv.setText("");
          cxCodPedidoDeliv.requestFocus();
        }

      }
      catch(NumberFormatException nfe){
        JOptionPane.showMessageDialog(null, "O Código deve ser um número inteiro!","Erro de Código", JOptionPane.ERROR_MESSAGE);
        cxCodPedidoDeliv.setText("");
        cxCodPedidoDeliv.requestFocus();
      }

    }
  
     public void alteraPedidoDeliv() throws SQLException{
        deli = new Delivery();
        
        try{
          deli.setPrato(Integer.parseInt(cxPratosClienteDeliv.getText()));
          deli.setBebida(Float.parseFloat(cxBebidasClienteDeliv.getText()));
          deli.setCodigo(Integer.parseInt(cxCodPedidoDeliv.getText()));
          deli.setEndereco(cxEndereco.getText());
          if(c.TstBD("select coalesce((select cod from PedidoDelivery where cod = " +deli.getCodigo()+ "),0)") == true){
            int respDeliv = JOptionPane.showConfirmDialog(null, "Confirma alteração de pedido?","Alteração de Pedido",JOptionPane.YES_NO_CANCEL_OPTION);
            if(respDeliv == 0){
              c.EntBD("update PedidoDelivery set prato = "+deli.getPrato()+",bebida = "+deli.getBebida()+", endereco = '"+deli.getEndereco()+"' where cod = "+ deli.getCodigo());
            }else{
              limpeza();
            }
          }else{
            JOptionPane.showMessageDialog(null, " Não existe um pedido delivery com esse código!","ERRO Alteração", 0);
            cxCodPedidoDeliv.setText("");
            cxCodPedidoDeliv.requestFocus();
          }
        }
        catch(NumberFormatException nfe){
          JOptionPane.showMessageDialog(null, "O valor deve ser um número!","Erro", JOptionPane.ERROR_MESSAGE);
        } 
    }

    public void limpeza(){
        cxBebidasClienteDeliv.setText("");
        cxPratosClienteDeliv.setText("");
        cxEndereco.setText("");
        cxCodPedidoDeliv.setText("");
    }
    
    //private FuncPedidoFis fpf = new FuncPedidoFis();
    private Fisico fisi = new Fisico();

    public void FazerPedido() throws SQLException{
      fisi = new Fisico();
      
      try{
        fisi.setPrato(Integer.parseInt(cxPratosCliente.getText()));
        fisi.setBebida(Float.parseFloat(cxBebidasCliente.getText()));
        fisi.setCodigo(Integer.parseInt(cxCodPedidoCliente.getText()));
        fisi.setMesa(Integer.parseInt(cxNumMesa.getText()));
        if(fisi.getCodigo()!= 0){    
          if(c.TstBD("select coalesce((select cod from PedidoFisico where cod = " +fisi.getCodigo()+ "),0)") == false){
                int respFis = JOptionPane.showConfirmDialog(null, "Confirma Pedido?","Confirmação de Pedido",JOptionPane.YES_NO_CANCEL_OPTION);
                if (respFis == 0){
                    c.EntBD("insert into PedidoFisico values ("+ fisi.getCodigo()+","+fisi.getMesa()+","+ fisi.getBebida()+","+fisi.getPrato()+",false);");
                    JOptionPane.showMessageDialog(null,"Pedido Feito com sucesso!","Cadastro realizado",JOptionPane.INFORMATION_MESSAGE);
                    subIngredinte(fisi.getPrato() , fisi.getBebida());
                }else{
                    limpezaFisico();
                }
          }else{
              JOptionPane.showMessageDialog(null, "Já existe um Pedido com este código!","ERRO Cadastro", 0);
              cxCodPedidoCliente.setText("");
              cxCodPedidoCliente.requestFocus();
          }
        }else{
          JOptionPane.showMessageDialog(null, "O código do pedido não pode ser 0!","ERRO Cadastro", 0);
          cxCodPedidoCliente.setText("");
          cxCodPedidoCliente.requestFocus();
        }
      }
      catch(NumberFormatException nfe){
        JOptionPane.showMessageDialog(null, "O valor deve ser um número!","Erro", JOptionPane.ERROR_MESSAGE);
        cxCodPedidoCliente.setText("");
        cxNumMesa.setText("");
      }
      
    }

    public void consPedidoFis() throws SQLException{
      fisi = new Fisico();
      try{
        fisi.setCodigo(Integer.parseInt(cxCodPedidoCliente.getText()));
        //fisi=fpf.consFisCod(fisi);
        if(c.TstBD("select coalesce((select cod from PedidoFisico where cod = " +fisi.getCodigo()+ "),0)") == true){
          rst = null;
          rst = c.OutBD("select * from PedidoFisico where cod = "+ fisi.getCodigo()+ ";");
          rst.next();
          fisi.setPrato(rst.getInt("prato"));
          fisi.setBebida(rst.getFloat("bebida"));
          System.out.println("asdadasdads");
          fisi.setMesa(rst.getInt("mesa"));
          cxPratosCliente.setText(Integer.toString(fisi.getPrato()));
          cxBebidasCliente.setText(Float.toString(fisi.getBebida()));
          cxCodPedidoCliente.setText(Integer.toString(fisi.getCodigo()));
          cxNumMesa.setText(Integer.toString(fisi.getMesa()));
        }else{
          JOptionPane.showMessageDialog(null, " Não existe um pedido fisico com esse código!","ERRO Consulta", 0);
          cxCodPedidoCliente.setText("");
          cxCodPedidoCliente.requestFocus();
        }
      }
      catch(NumberFormatException nfe){
        JOptionPane.showMessageDialog(null, "O Código deve ser um inteiro!","Erro de Código", JOptionPane.ERROR_MESSAGE);
        cxCodPedidoCliente.setText("");
        cxCodPedidoCliente.requestFocus();
      }
    }

    public void cancelaPedidoFis() throws SQLException{
        fisi = new Fisico();

      try{  
        fisi.setCodigo(Integer.parseInt(cxCodPedidoCliente.getText()));
        //fisi = fpf.consFisCod(fisi);
        if(c.TstBD("select coalesce((select cod from PedidoFisico where cod = " +fisi.getCodigo()+ "),0)") == true){
          rst = null;
          rst = c.OutBD("select * from PedidoFisico where cod = "+ fisi.getCodigo()+ ";");
          rst.next();
          fisi.setPrato(rst.getInt("prato"));
          fisi.setBebida(rst.getFloat("bebida"));
          fisi.setMesa(rst.getInt("mesa"));
          cxPratosCliente.setText(Integer.toString(fisi.getPrato()));
          cxBebidasCliente.setText(Float.toString(fisi.getBebida()));
          cxCodPedidoCliente.setText(Integer.toString(fisi.getCodigo()));
          cxNumMesa.setText(Integer.toString(fisi.getMesa()));
          
          int resp = JOptionPane.showConfirmDialog(null, "Confirma cancelamento?","Cancelamento de pedido",JOptionPane.YES_NO_CANCEL_OPTION);

          if(resp==0){
            c.EntBD("delete from PedidoFisico where cod = " +fisi.getCodigo());
            //fpf.cancelarPedido(fisi);
            limpeza();
            JOptionPane.showMessageDialog(null, "Pedido cancelado com sucesso!","Cancelamento Ok", 1);
          }else{
            limpeza();
          }
        }else{
          JOptionPane.showMessageDialog(null, " Não existe um pedido com esse código!","ERRO Consulta", 0);
          cxCodPedidoCliente.setText("");
          cxCodPedidoCliente.requestFocus();
        }

      }
      catch(NumberFormatException nfe){
        JOptionPane.showMessageDialog(null, "O Código deve ser um número inteiro!","Erro de Código", JOptionPane.ERROR_MESSAGE);
        cxCodPedidoCliente.setText("");
        cxNumMesa.setText("");
        cxCodPedidoCliente.requestFocus();
      }
    }

    public void alteraPedidoFis() throws SQLException{
        fisi = new Fisico();
        
        try{
          fisi.setPrato(Integer.parseInt(cxPratosCliente.getText()));
          fisi.setBebida(Float.parseFloat(cxBebidasCliente.getText()));
          fisi.setCodigo(Integer.parseInt(cxCodPedidoCliente.getText()));
          fisi.setMesa(Integer.parseInt(cxNumMesa.getText()));
          if(c.TstBD("select coalesce((select cod from PedidoFisico where cod = " +fisi.getCodigo()+ "),0)") == true){
            int resp = JOptionPane.showConfirmDialog(null, "Confirma alteração de pedido?","Alteração de Pedido",JOptionPane.YES_NO_CANCEL_OPTION);
            if(resp == 0){
              c.EntBD("update PedidoFisico set prato = "+fisi.getPrato()+",bebida = "+fisi.getBebida()+", mesa = "+fisi.getMesa()+" where cod = "+ fisi.getCodigo());
            }else{
              limpezaFisico();
            }
          }else{
            JOptionPane.showMessageDialog(null, " Não existe um pedido delivery com esse código!","ERRO Alteração", 0);
            cxCodPedidoCliente.setText("");
            cxCodPedidoCliente.requestFocus();
          }
        }
        catch(NumberFormatException nfe){
          JOptionPane.showMessageDialog(null, "O valor deve ser um número!","Erro", JOptionPane.ERROR_MESSAGE);
        } 
    }
    
    public void subIngredinte(int codPrato, float codBeb) throws SQLException{
        rst = null;
        rst = c.OutBD("select quantidade_ing from Pratos where idP = " + codPrato  +";");
        rst.next();
        rstAux = c.OutBD("select id_ingrediente from Pratos where idP = "+ codPrato);
        rstAux.next();
        c.EntBD("update Ingredientes set quantidade = (quantidade - " +rst.getInt(1)+ ") where idI = " + rstAux.getInt(1) + ";" );
        rst = null;
        rst = c.OutBD("select quantidade_ing from Bebidas where idB = " + codBeb  +";");
        rst.next();
        rstAux = null;
        rstAux = c.OutBD("select id_ingrediente from Bebidas where idB = "+ codBeb);
        rstAux.next();
        c.EntBD("update Ingredientes set quantidade = (quantidade - " +rst.getInt(1)+ ") where idI = " + rstAux.getInt(1) + ";" );
    }
  
    public void limpezaFisico(){
        cxBebidasCliente.setText("");
        cxPratosCliente.setText("");
        cxNumMesa.setText("");
        cxCodPedidoCliente.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Clientes;
    private javax.swing.JLabel ImgMenuCliente;
    private javax.swing.JButton btAlterarPedido;
    private javax.swing.JButton btAlterarPedidoCliente;
    private javax.swing.JButton btCancelarEntrega;
    private javax.swing.JButton btCancelarPedido;
    private javax.swing.JButton btCardapio;
    private javax.swing.JRadioButton btCliente;
    private javax.swing.JRadioButton btClienteDeliv;
    private javax.swing.JButton btConfirmPedidoCliente;
    private javax.swing.JButton btConfirmPedidoClienteDeliv;
    private javax.swing.JButton btVerifPedidoCliente;
    private javax.swing.JButton btVerifPedidoClienteDeliv2;
    private javax.swing.JTextField cxBebidasCliente;
    private javax.swing.JTextField cxBebidasClienteDeliv;
    private javax.swing.JTextField cxCodPedidoCliente;
    private javax.swing.JTextField cxCodPedidoDeliv;
    private javax.swing.JTextField cxEndereco;
    private javax.swing.JTextField cxNumMesa;
    private javax.swing.JTextField cxPratosCliente;
    private javax.swing.JTextField cxPratosClienteDeliv;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel pnCliente;
    private javax.swing.JPanel pnClienteDeliv;
    private javax.swing.JPanel pnMenuCliente;
    private javax.swing.JLabel rtBebidasCliente;
    private javax.swing.JLabel rtBebidasClienteDeliv;
    private javax.swing.JLabel rtCodPedidoCliente;
    private javax.swing.JLabel rtCodPedidoDeliv;
    private javax.swing.JLabel rtEndereco;
    private javax.swing.JLabel rtNumMesa;
    private javax.swing.JLabel rtPratosCliente;
    private javax.swing.JLabel rtPratosClienteDeliv;
    // End of variables declaration//GEN-END:variables

}
